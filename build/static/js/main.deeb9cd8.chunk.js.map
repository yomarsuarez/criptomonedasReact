{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptoMoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deeb9cd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\n\nconst Error = ({ mensaje }) => {\n  return <MensajeError>{mensaje}</MensajeError>;\n};\n\nexport default Error;\n","import React, { Fragment, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => (\n    <Fragment>\n      <Label>{label}</Label>\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\n        <option value=\"\">-- Seleccione</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.codigo} value={opcion.codigo}>\n            {opcion.nombre}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n  //Retornar state, interfaz y fn que modifica el state\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;\n","import React, { Fragment, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n`;\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n  //   console.log(opciones);\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectCripto = () => (\n    <Fragment>\n      <Label>{label}</Label>\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\n        <option value=\"\">-- Seleccione</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\n            {opcion.CoinInfo.FullName}\n          </option>\n        ))}\n      </Select>\n    </Fragment>\n  );\n  //Retornar state, interfaz y fn que modifica el state\n  return [state, SelectCripto, actualizarState];\n};\n\nexport default useCriptomoneda;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Error from \"./Error\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\nimport axios from \"axios\";\n\nconst Boton = styled.input`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #326ac0;\n    cursor: pointer;\n  }\n`;\n\nconst Formulario = ({ guardarMoneda, guardarCriptomoneda }) => {\n  //State del listado de criptomonedas\n  const [listacripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false);\n\n  const MONEDAS = [\n    { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\" },\n    { codigo: \"COP\", nombre: \"Peso Colombiano\" },\n    { codigo: \"EUR\", nombre: \"EUR\" },\n    { codigo: \"GBP\", nombre: \"Libra Esterlina\" },\n  ];\n\n  // utilizar useMoneda\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\", MONEDAS);\n\n  //Utilizar criptomoneda\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\n    \"Elige tu Criptomoneda\",\n    \"\",\n    listacripto\n  );\n\n  //Ejecutar llamado a la API\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url =\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n      const resultado = await axios.get(url);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n    consultarAPI();\n  }, []);\n\n  // Cuando el usuario hace submit\n  const cotizarMoneda = (e) => {\n    e.preventDefault();\n    //Validar si ambos campos estan llenos\n    if (moneda === \"\" || criptomoneda === \"\") {\n      guardarError(true);\n      return;\n    }\n    //Pasar los datos al componente principal\n    guardarError(false);\n    guardarMoneda(moneda);\n    guardarCriptomoneda(criptomoneda);\n  };\n\n  return (\n    <form onSubmit={cotizarMoneda}>\n      {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n      <SelectMonedas />\n\n      <SelectCripto />\n      <Boton type=\"submit\" value=\"Calcular\" />\n    </form>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ResultadoDiv = styled.div`\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Info = styled.p`\n  font-size: 18px;\n  span {\n    font-weight: bold;\n  }\n`;\n\nconst Precio = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n  }\n`;\nconst Cotizacion = ({ resultado }) => {\n  if (Object.keys(resultado).length === 0) return null;\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El precio es: <span>{resultado.PRICE}</span>\n      </Precio>\n      <Info>\n        Precio más alto del día: <span>{resultado.HIGHDAY}</span>\n      </Info>\n      <Info>\n        Precio más bajo del día: <span>{resultado.LOWDAY}</span>\n      </Info>\n      <Info>\n        Variación últimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span>\n      </Info>\n      <Info>\n        Última Actualización <span>{resultado.LASTUPDATE}</span>\n      </Info>\n    </ResultadoDiv>\n  );\n};\n\nexport default Cotizacion;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div class=\"sk-chase\">\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n      <div class=\"sk-chase-dot\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport imagen from \"./cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, guardarMoneda] = useState(\"\");\n  const [criptomoneda, guardarCriptomoneda] = useState(\"\");\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n    const cotizarCriptoMoneda = async () => {\n      //evitamos la ejecución por primer vez\n      if (moneda === \"\") return;\n\n      //consultar la api para obtener cotizacion\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      //mostrar el spinner\n      guardarCargando(true);\n\n      //ocultar el spinner y mostrar el resultado\n      setTimeout(() => {\n        //mostrar el spinner\n        guardarCargando(false);\n\n        //guardarCotizacion\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n    cotizarCriptoMoneda();\n  }, [moneda, criptomoneda]);\n\n  //Mostrar spinner o resultado\n  const componente = cargando ? (\n    <Spinner />\n  ) : (\n    <Cotizacion resultado={resultado} />\n  );\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} alt=\"imagen cripto\" />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al Instante</Heading>\n\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}